services:
  backend:
    container_name: konecta_backend
    build: ./backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    volumes:
      - ./backend:/usr/src/app
    env_file: ./backend/.env
    networks:
      - konecta_network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: konecta_frontend
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file: ./frontend/.env
    volumes:
      - ./frontend:/usr/src/app
    networks:
      - konecta_network
    depends_on:
      - backend

  db:
    container_name: konecta_db
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - konecta_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  konecta_network:
    driver: bridge

volumes:
  pgdata:
